services:
  db:
    image: mysql:8.0
    container_name: galileo_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    ports:
      - "3306:3306"
    networks:
      - backend

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: galileo_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=${PORT}
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=${MYSQL_DATABASE}
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - API_KEY=${API_KEY}
      - FRONTEND_URL=${FRONTEND_URL}
      - SHOW_ERRORS=${SHOW_ERRORS}
    ports:
      - "${PORT}:3000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', r=>r.statusCode===200?process.exit(0):process.exit(1))"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - backend
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

# Definici√≥n de redes
networks:
  backend:
    driver: bridge

volumes:
  db_data:
    name: galileo_db_data